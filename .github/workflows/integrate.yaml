name: integracion continua con node.js

on: [push, pull_request]

jobs:
  ci_to_main:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - name: Update apt and install required packages
        run: |
          sudo apt update
          sudo apt install --yes --no-install-recommends curl
          sudo apt-get install --yes gnupg

      - name: Import the public key used by the package management system
        run: |
          sudo rm -f /etc/ssl/certs/ca-bundle.crt
          sudo apt reinstall --yes ca-certificates
          sudo update-ca-certificates
          curl -fsSL https://pgp.mongodb.com/server-6.0.asc | \
            sudo gpg -o /usr/share/keyrings/mongodb-server-6.0.gpg \
            --dearmor

      - name: Install MongoDB
        run: |
          echo "deb [ arch=amd64,arm64 signed-by=/usr/share/keyrings/mongodb-server-6.0.gpg ] https://repo.mongodb.org/apt/ubuntu jammy/mongodb-org/6.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-6.0.list
          sudo apt-get update
          sudo apt-get install -y mongodb-org
      - name: Check Mongo version
        run: mongod --version
      - name: Start MongoDB
        run: sudo service mongod start
      - name: Verify that MongoDB has started successfully
        run: sudo service mongod status

      - name: Create database
        run: |
          # this sleep is added to avoid race condition without this we sometimes get the following error:
          # connecting to: mongodb://127.0.0.1:27017
          # 2023-05-30T13:02:52.975+0000 W NETWORK  [thread1] Failed to connect to 127.0.0.1:27017, in(checking socket for error after poll), reason: Connection refused
          # 2023-05-30T13:02:52.976+0000 E QUERY    [thread1] Error: couldn't connect to server 127.0.0.1:27017, connection attempt failed :
          # connect@src/mongo/shell/mongo.js:257:13
          # @(connect):1:6
          # exception: connect failed
          sleep 10
          
          mongosh --eval 'db.getSiblingDB("lnp2pbot").createCollection("mycollection")'

      - run: npm ci
      - name: Run tests
        env:
          DB_USER: ''
          DB_PASS: ''
          DB_HOST: 'localhost'
          DB_PORT: '27017'
          DB_NAME: 'lnp2pbot'
        run: npm test
      - name: Starting the bot
        env:
          # base64 -w0 ~/.lnd/tls.cert
          LND_CERT_BASE64: ''
          # base64 -w0 ~/.lnd/data/chain/bitcoin/mainnet/admin.macaroon
          LND_MACAROON_BASE64: ''
          LND_GRPC_HOST: '127.0.0.1:10009'
          BOT_TOKEN: '123456'

          # The max fee amount that the Bot will charge to the seller, 0.002 = 0.2%
          MAX_FEE: 0
          # Percentage of the total amount that the bot will take as a fee, 0.7 = 70%
          FEE_PERCENT: 0.7

          # Uncomment if running bot behind Tor service
          # SOCKS_PROXY_HOST='socks5h://localhost:9050'

          # DB_USER='mongoadmin'
          # DB_PASS='secret'
          # DB_HOST='localhost'
          # DB_PORT='27017'
          # DB_NAME='mongodb-mongodb-1'

          # If MONGO_URI have a value DB_* vars will be ignored
          MONGO_URI: ""
          #'mongodb://username:password@localhost'

          # lightning invoice expiration time in milliseconds
          INVOICE_EXPIRATION_WINDOW: 3600000
          # lightning hold invoice expiration time in seconds
          HOLD_INVOICE_EXPIRATION_WINDOW: 600

          CHANNEL: '@p2plnbotchannel'
          ADMIN_CHANNEL: '-10012345678987654321'
          HELP_GROUP: '@lnp2pbotHelp'

          MAX_DISPUTES: 4

          # Hold invoice cltv delta (expiration time in blocks)
          HOLD_INVOICE_CLTV_DELTA: 144
          # Safety window for hold invoices expiration, needed when blocks are mined faster than regularly (in blocks)
          HOLD_INVOICE_CLTV_DELTA_SAFETY_WINDOW: 12

          # We try to pay again when the buyer invoice failed, in minutes
          PENDING_PAYMENT_WINDOW: 5

          # Fiat currency rate API
          FIAT_RATE_NAME: ''
          FIAT_RATE_EP: ''
          NODE_ENV: 'development'

          # Expiration time for published order in seconds
          ORDER_PUBLISHED_EXPIRATION_WINDOW: 82800

          # Minimum amount for a payment in satoshis
          MIN_PAYMENT_AMT: 1

          # Maximum number of orders that a user can have published (PENDING) at the same time
          MAX_PENDING_ORDERS: 4

          # winston Log level
          LOG_LEVEL: 'debug'

          # Max routing fee that we want to pay to the network, 0.001 = 0.1%
          MAX_ROUTING_FEE: 0.001

          # Attempts to pay the invoice again when the payment failed
          PAYMENT_ATTEMPTS: 2

          # Here will go the disputes from non community orders
          DISPUTE_CHANNEL: '@p2plnbotDispute'

          # time-to-live for communities in days, communities without successful orders on this time are deleted
          COMMUNITY_TTL: 31

          # nostr bot private key
          NOSTR_SK: ''
        run: npm start
